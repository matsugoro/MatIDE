<Window x:Class="MatIDE.MainWindow"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
		xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
		xmlns:my="clr-namespace:MatIDE"
		xmlns:dc="clr-namespace:MatIDE.Docking"
		xmlns:vv="clr-namespace:MatIDE.Views"
		xmlns:vw="clr-namespace:MatIDE.Views.Setting"
		xmlns:vm="clr-namespace:MatIDE.ViewModels"
		xmlns:cv="clr-namespace:MatIDE.Converters"
		xmlns:av="http://schemas.xceed.com/wpf/xaml/avalondock"
		xmlns:ae="http://icsharpcode.net/sharpdevelop/avalonedit"
		Name="Main"
		Title="MainWindow" WindowState="Maximized" Height="1123.286" Width="1022.842">

	<Window.DataContext>
		<vm:MainWindowVM />
	</Window.DataContext>

	<Window.Resources>
		<cv:ActiveDocumentConverter x:Key="ActiveDocumentConverter"/>
		<av:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
	</Window.Resources>

	<Window.InputBindings>
		<KeyBinding Command="{Binding NewCommand}" Key="N" Modifiers="Control" />
		<KeyBinding Command="{Binding OpenCommand}" Key="O" Modifiers="Control" />
	</Window.InputBindings>

	<i:Interaction.Triggers>
		<l:InteractionMessageTrigger MessageKey="ShowCommand" Messenger="{Binding Messenger}">
			<l:TransitionInteractionMessageAction WindowType="{x:Type vw:SettingWnd}" Mode="Modal" />
		</l:InteractionMessageTrigger>
	</i:Interaction.Triggers>

	<DockPanel Name="GeneralDock">
		<Menu DockPanel.Dock="Top" Height="23">
			<MenuItem Header="_File" Height="23">
				<MenuItem Header="New _File" InputGestureText="Ctrl+N" Command="{Binding NewCommand}">
					<MenuItem.Icon>
						<Image Source="Images/document.png" Height="16" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="New _Project" InputGestureText="Shift+Ctrl+N" />
				<MenuItem Header="Create project from directory" />
				<Separator />
				<MenuItem Header="_Open File..." InputGestureText="Ctrl+O" Command="{Binding OpenCommand}">
					<MenuItem.Icon>
						<Image Source="Images/Open.png" Height="16"/>
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="Open Project..." InputGestureText="Shift+Ctrl+O" />
				<Separator />
				<MenuItem Header="Close project" />
				<Separator />
				<MenuItem Header="_Close" Command="{Binding CloseCommand}" />
				<MenuItem Header="_Save" InputGestureText="Ctrl+S" />
				<MenuItem Header="Save _As..." />
				<MenuItem Header="すべてを保存" InputGestureText="Ctrl+Shift+S" />
				<Separator />
				<MenuItem Header="_Print..." InputGestureText="Ctrl+P" />
				<MenuItem Header="Print Pre_view" />
				<MenuItem Header="Printer Settings..." />
				<Separator />
				<MenuItem Header="Recent Files" Name="menuRecentFiles"
				          ItemsSource="{Binding RecentFiles.ListOfMruEntries}"
						  Visibility="{Binding Path=RecentFiles.ListOfMruEntries, Mode=OneWay, Converter={cv:ZeroToVisibilityConverter} }">
					<MenuItem.ItemContainerStyle>
						<Style TargetType="MenuItem">
							<Setter Property="Header" Value="{Binding DisplayName, Mode=OneWay}" />
							<Setter Property="Command" Value="my:AppCommands.LoadFile" />
							<Setter Property="CommandParameter" Value="{Binding PathFileName, Mode=OneWay}" />
							<Setter Property="IsEnabled" Value="{Binding IsEnabled}" />
						</Style>
					</MenuItem.ItemContainerStyle>
				</MenuItem>
				<MenuItem Header="Recent Projects" Name="menuRecentProjects"
						  ItemsSource="{Binding RecentProjects.ListOfMruEntries}"
						  Visibility="{Binding Path=RecentProjects.ListOfMruEntries, Mode=OneWay, Converter={cv:ZeroToVisibilityConverter} }">			
					<MenuItem.ItemContainerStyle>
						<Style TargetType="MenuItem">
							<Setter Property="Header" Value="{Binding DisplayName, Mode=OneWay}" />
							<!--
							<Setter Property="Command" Value="my:AppCommands.LoadFile" />
							<Setter Property="CommandParameter" Value="{Binding PathFileName, Mode=OneWay}" />
							-->
							<Setter Property="IsEnabled" Value="{Binding IsEnabled}" />
						</Style>
					</MenuItem.ItemContainerStyle>
				</MenuItem>
				<Separator />
				<MenuItem Header="MatIDEの終了(_X)" Command="{Binding QuitCommand}" CommandParameter="{Binding ElementName=Main}" />
			</MenuItem>
			<MenuItem Header="_Edit">
				<MenuItem Header="元に戻す(_U)" InputGestureText="Ctrl+Z">
					<MenuItem.Icon>
						<Image Source="Images/undo.png" Height="16" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="やり直し" InputGestureText="Ctrl+Y">
					<MenuItem.Icon>
						<Image Source="Images/redo.png" Height="16" />
					</MenuItem.Icon>
				</MenuItem>
				<Separator />
				<MenuItem Header="切り取り(_T)" InputGestureText="Ctrl+X">
					<MenuItem.Icon>
						<Image Source="Images/cut.png" Height="16" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="コピー(_C)" InputGestureText="Ctrl+C">
					<MenuItem.Icon>
						<Image Source="Images/copy.png" Height="16" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="貼り付け(_P)" InputGestureText="Ctrl+V">
					<MenuItem.Icon>
						<Image Source="Images/paste.png" Height="16" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="削除(_D)" InputGestureText="Del" />
				<Separator />
				<MenuItem Header="文字コードセット指定" />
				<MenuItem Header="改行コード指定" >
					<MenuItem Header="改行コード指定：CRLF" />
					<MenuItem Header="改行コード指定：LF" />
					<MenuItem Header="改行コード指定：CR" />
				</MenuItem>
				<Separator />
				<MenuItem Header="挿入">
					<MenuItem Header="テキストとしてファイルを挿入" />
					<MenuItem Header="日付挿入" />
					<MenuItem Header="時刻挿入" />
					<MenuItem Header="制御コード挿入" />
				</MenuItem>
				<MenuItem Header="高度な操作">
					<MenuItem Header="単語の左端まで削除" />
					<MenuItem Header="単語の右端まで削除" />
					<Separator />
					<MenuItem Header="現在位置の単語を選択" />
					<MenuItem Header="単語切り取り" />
					<MenuItem Header="単語削除" />
					<Separator />
					<MenuItem Header="行頭まで切り取り" />
					<MenuItem Header="行末まで切り取り" />
					<Separator />
					<MenuItem Header="行頭まで削除" />
					<MenuItem Header="行末まで削除" />
					<Separator />
					<MenuItem Header="行切り取り" />
					<MenuItem Header="行削除" />
					<MenuItem Header="選択範囲内全行コピー" />
					<MenuItem Header="選択範囲内全行引用符付きコピー" />
					<MenuItem Header="選択範囲内全行行番号付きコピー" />
					<MenuItem Header="選択範囲内色付きHTMLコピー" />
					<MenuItem Header="選択範囲内行番号色付きHTMLコピー" />
					<Separator />
					<MenuItem Header="このファイル名をコピー" />
					<MenuItem Header="このファイルのパス名をコピー" />
				</MenuItem>
				<MenuItem Header="移動">
					<MenuItem Header="指定行にジャンプ..." />
					<Separator />
					<MenuItem Header="カーソル上移動(２行単位)" />
					<MenuItem Header="カーソル下移動（２行単位）" />
					<MenuItem Header="単語の左端に移動" />
					<MenuItem Header="単語の右端に移動" />
					<MenuItem Header="前の段落へ移動" />
					<MenuItem Header="次の段落へ移動" />
					<MenuItem Header="行頭に移動（折り返し単位）" />
					<MenuItem Header="行末に移動（折り返し単位）" />
					<Separator />
					<MenuItem Header="ページアップ" />
					<MenuItem Header="ページダウン" />
					<MenuItem Header="ファイルの先頭に移動" />
					<MenuItem Header="ファイルの最後に移動" />
				</MenuItem>
				<MenuItem Header="選択">
					<MenuItem Header="すべて選択" InputGestureText="Ctrl+A" />
					<Separator />
					<MenuItem Header="現在位置の単語を選択" />
					<MenuItem Header="範囲選択開始" />
					<Separator />
					<MenuItem Header="（選択）カーソル上移動（２行単位）" />
					<MenuItem Header="（選択）カーソル下移動（２行単位）" />
					<MenuItem Header="（選択）単語の左端に移動" />
					<MenuItem Header="（選択）単語の右端に移動" />
					<MenuItem Header="（選択）前の段落に移動" />
					<MenuItem Header="（選択）次の段落に移動" />
					<MenuItem Header="（選択）行頭に移動（折り返し単位）" />
					<MenuItem Header="（選択）行末に移動（折り返し単位）" />
					<Separator />
					<MenuItem Header="（選択）ページアップ" />
					<MenuItem Header="（選択）ページダウン" />
					<MenuItem Header="（選択）ファイルの先頭に移動" />
					<MenuItem Header="（選択）ファイルの最後に移動" />
				</MenuItem>
				<MenuItem Header="矩形選択">
					<MenuItem Header="矩形選択開始" />
					<Separator />
					<MenuItem Header="（矩形選択）カーソル上移動（２行単位）" />
					<MenuItem Header="（矩形選択）カーソル下移動（２行単位）" />
					<MenuItem Header="（矩形選択）単語の左端に移動" />
					<MenuItem Header="（矩形選択）単語の右端に移動" />
					<MenuItem Header="（矩形選択）前の段落に移動" />
					<MenuItem Header="（矩形選択）次の段落に移動" />
					<MenuItem Header="（矩形選択）行頭に移動（折り返し単位）" />
					<MenuItem Header="（矩形選択）行末に移動（折り返し単位）" />
					<Separator />
					<MenuItem Header="（矩形選択）ページアップ" />
					<MenuItem Header="（矩形選択）ページダウン" />
					<MenuItem Header="（矩形選択）ファイルの先頭に移動" />
					<MenuItem Header="（矩形選択）ファイルの最後に移動" />
				</MenuItem>
				<MenuItem Header="整形">
					<MenuItem Header="左（先頭）の空白を削除" />
					<MenuItem Header="右（末尾）の空白を削除" />
					<Separator />
					<MenuItem Header="選択行の昇順ソート" />
					<MenuItem Header="選択行の降順ソート" />
					<Separator />
					<MenuItem Header="連続した重複行の削除" />
				</MenuItem>
				<Separator />
				<MenuItem Header="挿入/上書きモード切り替え(_I)" InputGestureText="Ins" />
				<Separator />
				<MenuItem Header="詳細">
					<MenuItem Header="ドキュメントのフォーマット" />
					<MenuItem Header="選択範囲のフォーマット" />
					<MenuItem Header="選択行にタブを設定" />
					<MenuItem Header="選択行のタブ設定を解除" />
					<Separator />
					<MenuItem Header="選択範囲をコメントアウト" />
					<MenuItem Header="選択範囲のコメントアウトを解除" />
					<Separator />
					<MenuItem Header="行インデント" />
					<MenuItem Header="行インデント解除" />
					<Separator />
					<MenuItem Header="変換">
						<MenuItem Header="大文字に変換" />
						<MenuItem Header="小文字に変換" />
						<MenuItem Header="全角 → 半角" />
						<MenuItem Header="半角＋全ひら → 全角・カタカナ" />
						<MenuItem Header="半角＋全カナ → 全角・ひらがな" />
						<MenuItem Header="全角英数 → 半角英数" />
						<MenuItem Header="半角英数 → 全角英数" />
						<MenuItem Header="全角カタカナ → 半角カタカナ" />
						<MenuItem Header="半角カタカナ → 全角カタカナ" />
						<MenuItem Header="半角カタカナ → 全角ひらがな" />
						<Separator />
						<MenuItem Header="TAB → スペース" />
						<MenuItem Header="スペース → TAB" />
					</MenuItem>
					<MenuItem Header="文字コード変換">
						<MenuItem Header="自動判別 → SJIS" />
						<MenuItem Header="JIS → SIJIS" />
						<MenuItem Header="EUC → SJIS" />
						<MenuItem Header="Unicode → SJIS" />
						<MenuItem Header="UnicodeBE → SJIS" />
						<MenuItem Header="UTF-8 → SJIS" />
						<MenuItem Header="UTF-7 → SJIS" />
						<Separator />
						<MenuItem Header="SJIS → JIS" />
						<MenuItem Header="SJIS → EUC" />
						<MenuItem Header="SJIS → UTF-8" />
						<MenuItem Header="SJIS → UTF-7" />
						<Separator />
						<MenuItem Header="Base64デコードして保存" />
						<MenuItem Header="Uudecodeして保存" />
					</MenuItem>
				</MenuItem>
				<MenuItem Header="ブックマーク">
					<MenuItem Header="ブックマークの設定/解除(_T)" InputGestureText="Ctrl+K, Ctrl+K" />
					<MenuItem Header="すべてのブックマークを有効にする" />
					<MenuItem Header="ブックマークを有効にする" />
					<MenuItem Header="前のブックマーク" />
					<MenuItem Header="次のブックマーク" />
					<MenuItem Header="ブックマークをクリア" />
					<Separator />
					<MenuItem Header="ドキュメント内の前のブックマーク" />
					<MenuItem Header="ドキュメント内の次のブックマーク" />
					<MenuItem Header="ドキュメント内のブックマークをすべてクリア" />
				</MenuItem>
				<MenuItem Header="アウトライン">
					<MenuItem Header="ブロックを折りたたむ" />
					<MenuItem Header="すべてを折りたたむ" />
					<Separator />
					<MenuItem Header="アウトラインの展開/折り畳み" />
					<MenuItem Header="すべてのアウトラインの切り替え" />
					<MenuItem Header="アウトラインの中止" />
					<MenuItem Header="カレントを表示" />
					<MenuItem Header="定義に折りたたむ" />
				</MenuItem>
				<MenuItem Header="Intellisence">
					<MenuItem Header="メンバの一覧" />
					<MenuItem Header="パラメータヒント" />
					<MenuItem Header="クイックヒント" />
					<MenuItem Header="入力候補" />
					<MenuItem Header="完了モードの切り替え" />
					<Separator />
					<MenuItem Header="スぺニットの挿入" />
					<MenuItem Header="ブロックの挿入" />
				</MenuItem>
			</MenuItem>
			<MenuItem Header="_View">
				<MenuItem Header="アプリケーションの外観(_A)">
					<MenuItem Header="Windows _2000" />
					<MenuItem Header="Windows _XP" />
					<MenuItem Header="Visual Studio 200_5" />
					<MenuItem Header="Visual Studio 200_8" />
					<MenuItem Header="_Office Style">
						<MenuItem Header="Office _XP" />
						<MenuItem Header="Office 200_3" />
						<MenuItem Header="Office 2007 _BlueStyle" />
						<MenuItem Header="Office 2007 B_lackStyle" />
						<MenuItem Header="Office 2007 _SilverStyle" />
						<MenuItem Header="Office 2007 _AquaStyle" />
					</MenuItem>
				</MenuItem>
				<Separator />
				<MenuItem Header="_Toolbars">
					<MenuItem Header="_Standard" IsCheckable="True" IsChecked="{Binding ElementName=stdToolbar, Path=Visibility, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter={x:Static Visibility.Hidden}}" />
					<Separator />
					<MenuItem Header="_Customize..." />
				</MenuItem>
				<MenuItem Header="_Statusbar" IsChecked="{Binding IsVisibleStatusbar, Mode=TwoWay}" IsCheckable="True" />
				<MenuItem Header="_Function Keys" IsChecked="{Binding IsVisibleFunckyBar, Mode=TwoWay}" IsCheckable="True" />
				<Separator />
				<MenuItem Header="ProjectFileView" IsChecked="{Binding ProjectExplorer.IsVisible, Mode=TwoWay}" IsCheckable="True" />
				<MenuItem Header="LocalExplorer" IsChecked="{Binding LocalExplorer.IsVisible, Mode=TwoWay}" IsCheckable="True" />
				<MenuItem Header="端末ウィンドウ">
					<MenuItem Header="Dummy3" />
				</MenuItem>
				<MenuItem Header="OutlineWindow" IsChecked="{Binding OutlineWindow.IsVisible, Mode=TwoWay}" IsCheckable="True" />
				<MenuItem Header="BookmarkWindow" IsChecked="{Binding BookmarkWindow.IsVisible, Mode=TwoWay}" IsCheckable="True"/>
				<MenuItem Header="OutputWindow" IsChecked="{Binding OutputWindow.IsVisible, Mode=TwoWay}" IsCheckable="True" />
				<MenuItem Header="FindResult" IsChecked="{Binding FindResult.IsVisible, Mode=TwoWay}" IsCheckable="True" />
				<Separator />
				<MenuItem Header="折り返し方法">
					<MenuItem Header="折り返さない" />
					<MenuItem Header="指定行で折り返す" />
					<MenuItem Header="右端で折り返す" />
				</MenuItem>
				<Separator />
				<MenuItem Header="スペース文字を表示" />
				<MenuItem Header="TAB文字を表示" />
			</MenuItem>
			<MenuItem Header="_Search">
				<MenuItem Header="検索(_F)" />
				<MenuItem Header="次を検索" />
				<MenuItem Header="前を検索" />
				<MenuItem Header="置換" />
				<MenuItem Header="検索マークの切り替え" />
				<MenuItem Header="インクリメンタルサーチ" />
				<Separator />
				<MenuItem Header="_Grep" />
				<Separator />
				<MenuItem Header="対括弧の検索" />
			</MenuItem>
			<MenuItem Header="_Tools">
				<MenuItem Header="キーマクロの記録開始" />
				<MenuItem Header="キーマクロの保存" />
				<MenuItem Header="キーマクロの読み込み" />
				<MenuItem Header="キーマクロの実行" />
				<MenuItem Header="登録済みマクロ">
					<MenuItem Header="登録済みマクロはありません" />
				</MenuItem>
				<MenuItem Header="名前を指定してキーマクロを実行" />
				<Separator />
				<MenuItem Header="外部ツールの実行(_C)" />
				<Separator />
				<MenuItem Header="コードスぺニット管理" />
				<MenuItem Header="入力保管管理" />
				<Separator />
				<MenuItem Header="環境設定(_O)" Command="{Binding SettingCommand}" />
			</MenuItem>
			<MenuItem Header="_Window">
				<MenuItem Header="分割" />
				<MenuItem Header="フローティング" />
				<MenuItem Header="すべてフローティング表示" />
				<MenuItem Header="ドッキング" />
				<MenuItem Header="自動的に隠す" />
				<MenuItem Header="非表示" />
				<Separator />
				<MenuItem Header="タブを固定する" />
				<Separator />
				<MenuItem Header="水平タブグループの新規作成" />
				<MenuItem Header="垂直タブグループの新規作成" />
				<MenuItem Header="すべてのドキュメントを閉じる" />
				<MenuItem Header="ウィンドウレイアウトのリセット" />
				<Separator />
				<MenuItem Header="ウィンドウ" />
			</MenuItem>
			<MenuItem Header="_Help">
				<MenuItem Header="バージョン情報(_A)" />
			</MenuItem>
			<MenuItem Header="_Debug">
				<MenuItem Header="_Test" Command="{Binding TestWinCommand}" />
			</MenuItem>
		</Menu>
		<ToolBar DockPanel.Dock="Top" Name="stdToolbar">
			<ToolBar.Resources>
				<Style TargetType="{x:Type Image}">
					<Style.Triggers>
						<DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ButtonBase}, AncestorLevel=1}, Path=IsEnabled}" Value="False">
							<Setter Property="Opacity" Value="0.30" />
						</DataTrigger>
					</Style.Triggers>
				</Style>
			</ToolBar.Resources>
			<Button Command="{Binding NewCommand}" ToolTip="New File">
				<Image Source="Images/document.png" Height="16" />
			</Button>
			<Button Command="{Binding OpenCommand}" ToolTip="Open File">
				<Image Source="Images/Open.png" Height="16"/>
			</Button>
			<Button>
				<Image Source="Images/Save.png" Height="16"/>
			</Button>
			<Separator/>
			<Button Command="Cut">
				<Image Source="Images/Cut.png" Height="16"/>
			</Button>
			<Button Command="Copy">
				<Image Source="Images/Copy.png" Height="16"/>
			</Button>
			<Button Command="Paste">
				<Image Source="Images/Paste.png" Height="16"/>
			</Button>
			<Button Command="Delete">
				<Image Source="Images/Delete.png" Height="16"/>
			</Button>
			<Separator/>
			<Button Command="Undo">
				<Image Source="Images/Undo.png" Height="16"/>
			</Button>
			<Button Command="Redo">
				<Image Source="Images/Redo.png" Height="16"/>
			</Button>
			<Separator/>
			<CheckBox IsChecked="{Binding ElementName=textEditor,Path=WordWrap}">
				<Image Source="Images/WordWrap.png" Height="16"/>
			</CheckBox>
			<CheckBox IsChecked="{Binding ElementName=textEditor,Path=ShowLineNumbers}">
				<TextBlock Width="16" TextAlignment="Center">#</TextBlock>
			</CheckBox>
			<CheckBox IsChecked="{Binding ElementName=textEditor,Path=Options.ShowEndOfLine}">
				<TextBlock Width="16" TextAlignment="Center">¶</TextBlock>
			</CheckBox>
			<!--
			<ComboBox Name="highlightingComboBox"
				SelectedItem="{Binding SyntaxHighlighting, ElementName=textEditor}"
				ItemsSource="{Binding Source={x:Static avalonEdit:HighlightingManager.Instance}, Path=HighlightingDefinitions}"
				SelectionChanged="HighlightingComboBox_SelectionChanged"/>
			-->
		</ToolBar>

		<StatusBar DockPanel.Dock="Bottom" Name="statusBar" Visibility="{Binding VisibilityStatusbar}">
			<StatusBarItem DockPanel.Dock="Right">Item2</StatusBarItem>
			<StatusBarItem DockPanel.Dock="Left" >Item1</StatusBarItem>
		</StatusBar>

		<Grid DockPanel.Dock="{Binding PosFunckeyBar}" Name="fkeyBar" Visibility="{Binding VisibilityFunckeyBar}" >
			<Grid.ColumnDefinitions>
				<ColumnDefinition />
				<ColumnDefinition />
				<ColumnDefinition />
				<ColumnDefinition />
				<ColumnDefinition />
				<ColumnDefinition />
				<ColumnDefinition />
				<ColumnDefinition />
				<ColumnDefinition />
				<ColumnDefinition />
				<ColumnDefinition />
				<ColumnDefinition />
			</Grid.ColumnDefinitions>
			<Button Grid.Column="0" Content="F1" />
			<Button Grid.Column="1" Content="F2" />
			<Button Grid.Column="2" Content="F3" />
			<Button Grid.Column="3" Content="F4" />
			<Button Grid.Column="4" Content="F5" />
			<Button Grid.Column="5" Content="F6" />
			<Button Grid.Column="6" Content="F7" />
			<Button Grid.Column="7" Content="F8" />
			<Button Grid.Column="8" Content="F9" />
			<Button Grid.Column="9" Content="F10" />
			<Button Grid.Column="10" Content="F11" />
			<Button Grid.Column="11" Content="F12" />
		</Grid>

		<av:DockingManager x:Name="_dockingManager"
						   AnchorablesSource="{Binding Tools}"
						   DocumentsSource="{Binding Files}"
						   ActiveContent="{Binding ActiveDocument, Mode=TwoWay, Converter={StaticResource ActiveDocumentConverter}}">

			<av:DockingManager.Theme>
				<av:ExpressionLightTheme />
			</av:DockingManager.Theme>

			<av:DockingManager.LayoutItemTemplateSelector>
				<dc:PanesTemplateSelector>

					<!-- DocumentViewer -->
					<dc:PanesTemplateSelector.FileViewTemplate>
						<DataTemplate>
							<ae:TextEditor Name="textEditor"
										   Document="{Binding Document, UpdateSourceTrigger=PropertyChanged}"
										   SyntaxHighlighting="{Binding HighlightDef}"
							               ShowLineNumbers="True" 
										   FontFamily="Consolas" FontSize="10pt" />
						</DataTemplate>
					</dc:PanesTemplateSelector.FileViewTemplate>

					<!-- ProjectExplorer -->
					<dc:PanesTemplateSelector.ProjectExplorerViewTemplate>
						<DataTemplate>
							<TreeView />
						</DataTemplate>
					</dc:PanesTemplateSelector.ProjectExplorerViewTemplate>
					<!-- OutlineWindow -->
					<dc:PanesTemplateSelector.OutlineWindowViewTemplate>
						<DataTemplate>
							<TreeView />
						</DataTemplate>
					</dc:PanesTemplateSelector.OutlineWindowViewTemplate>
					<!-- BookmarkWindow -->
					<dc:PanesTemplateSelector.BookmarkWindowViewTemplate>
						<DataTemplate>
							<TextBox />
						</DataTemplate>
					</dc:PanesTemplateSelector.BookmarkWindowViewTemplate>
					<!-- OutputWindow -->
					<dc:PanesTemplateSelector.OutputWindowViewTemplate>
						<DataTemplate>
							<ListView />
						</DataTemplate>
					</dc:PanesTemplateSelector.OutputWindowViewTemplate>
					<!-- SearchResult -->
					<dc:PanesTemplateSelector.FindResultViewTemplate>
						<DataTemplate>
							<ListView />
						</DataTemplate>
					</dc:PanesTemplateSelector.FindResultViewTemplate>
					<!-- LocalExplorerView -->
					<dc:PanesTemplateSelector.LocalExplorerViewTemplate>
						<DataTemplate>
							<vv:LocalExplorerView />
						</DataTemplate>
					</dc:PanesTemplateSelector.LocalExplorerViewTemplate>
				</dc:PanesTemplateSelector>
			</av:DockingManager.LayoutItemTemplateSelector>

			<av:DockingManager.LayoutItemContainerStyleSelector>
				<dc:PanesStyleSelector>
					<dc:PanesStyleSelector.ToolStyle>
						<Style TargetType="{x:Type av:LayoutAnchorableItem}">
							<Setter Property="Title" Value="{Binding Model.Title}"/>
							<Setter Property="IconSource" Value="{Binding Model.Icon}"/>
							<Setter Property="Visibility" Value="{Binding Model.IsVisible, Mode=TwoWay, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter={x:Static Visibility.Hidden}}"/>
							<Setter Property="ContentId" Value="{Binding Model.ContentId}"/>
							<Setter Property="IsSelected" Value="{Binding Model.IsSelected, Mode=TwoWay}"/>
							<Setter Property="IsActive" Value="{Binding Model.IsActive, Mode=TwoWay}"/>
						</Style>
					</dc:PanesStyleSelector.ToolStyle>
					<dc:PanesStyleSelector.FileStyle>
						<Style TargetType="{x:Type av:LayoutItem}">
							<Setter Property="Title" Value="{Binding Model.Title}"/>
							<Setter Property="ToolTip" Value="{Binding Model.FilePath}"/>
							<Setter Property="CloseCommand" Value="{Binding Model.CloseCommand}"/>
							<Setter Property="IconSource" Value="{Binding Model.Icon}"/>
							<Setter Property="ContentId" Value="{Binding Model.ContentId}"
							/>
						</Style>
					</dc:PanesStyleSelector.FileStyle>
				</dc:PanesStyleSelector>
			</av:DockingManager.LayoutItemContainerStyleSelector>

			<av:DockingManager.LayoutUpdateStrategy>
				<dc:LayoutInitializer />
			</av:DockingManager.LayoutUpdateStrategy>

			<av:LayoutRoot>
				<av:LayoutPanel Orientation="Vertical">
					<av:LayoutPanel Orientation="Horizontal">
						<av:LayoutAnchorablePane DockWidth="200" Name="TPaneLeft" />
						<av:LayoutDocumentPane />
						<av:LayoutAnchorablePane DockWidth="200" Name="TPaneRight" />
					</av:LayoutPanel>
					<av:LayoutAnchorablePane Name="TPaneBottom" DockHeight="200" />
				</av:LayoutPanel>
			</av:LayoutRoot>
		</av:DockingManager>

	</DockPanel>
</Window>

